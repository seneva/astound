@mixin google-font($font,$weight) {
	$font: unquote($font);
	@import url(https://fonts.googleapis.com/css?family=#{$font}:#{$weight})
}

@function str-replace($string, $search, $replace: "") {
	$index: str-index($string, $search);

	@if $index {
		@return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
	}

	@return $string;
}

@mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff ttf svg) {
	$src: null;

	$extmods: (
		eot: "?",
		svg: "#" + str-replace($name, " ", "_")
	);

	$formats: (
		otf: "opentype",
		ttf: "truetype"
	);

	@each $ext in $exts {
		$extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);
		$format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);
		$src: append($src, url(quote($path + "." + $extmod)) format(quote($format)), comma);
	}

	@font-face {
		font-family: quote($name);
		font-style: $style;
		font-weight: $weight;
		src: $src;
	}
}

@mixin border-radius($radius: 5px) {
	-webkit-border-radius: $radius;
	-moz-border-radius: $radius;
	border-radius: $radius;
}

@mixin translate($translateX, $translateY) {
	-ms-transform: translate($translateX, $translateY);
	-webkit-transform: translate($translateX, $translateY);
	transform: translate($translateX, $translateY);
}

@mixin box-sizing($boxmodel) {
	-webkit-box-sizing: $boxmodel;
	-moz-box-sizing: $boxmodel;
	box-sizing: $boxmodel;
}

@mixin desktop-screens() {
	@media only screen and (min-width: 992px) {
		@content;
	}
}

@mixin tablet-screens() {
	@media only screen and (min-width: 768px) and (max-width: 991px) {
		@content;
	}
}

@mixin phone-tablet-screens() {
	@media only screen and (max-width: 991px) {
		@content;
	}
}

@mixin phone-screens() {
	@media only screen and (max-width: 767px) {
		@content;
	}
}